<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.1">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>594</x>
      <y>528</y>
      <w>126</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>
Map (final, Singleton)
--

--
+ move(:Entity, :2DVector)
--
*Rationale*
* Avatar(s) reside here
* List of Entities resides here
* 2D array of Tiles in here
* Represents the game world
--
Implemention:
Testing:</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>606</x>
      <y>96</y>
      <w>210</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
DrawableThingInterface
--
--
+ healWithinRadius(:DrawableThing, :Int, :Int)
+ hurtWithinRadius(:DrawableThing, :Int, :Int)
+ killWithinRadius(:DrawableThing, :Boolean)
+ levelUpWithinRadius(:DrawableThing, :Boolean)
--
*Rationale:*
* Contains function prototypes
that DrawableThings can use to 
call the map
* Groups common functions that
all Drawable Things will use
* Implements Serializable
--
Implementation: 
Testing: </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>510</x>
      <y>300</y>
      <w>150</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>&lt;&lt;association class&gt;
MapEntity
--
_map: Map
--
+ sendAttack(:Entity, :2DVector) : Int
+ receiveAttack(:Entity, :2DVector) : Int
+ interact(:Item)
+ levelUp(:Entity)
+ move(:2DVector)
+ use(:Item)
--
Rationale:
* Contains functions
than an Entity can use to 
manipulate map
--
Implementation: 
Testing: </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>690</x>
      <y>354</y>
      <w>126</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>&lt;&lt;association class&gt;&gt;
MapItem
--
_map:Map
--
+ activate(:Item)
+ activate(:Item, :Item)
+ activate(:Item, :Entity)
--
*Rationale:*
* Contains function prototypes
than an Item can use to 
manipulate map
--
Implementation:
Testing: </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>840</x>
      <y>306</y>
      <w>126</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>&lt;&lt;association class&gt;&gt;
MapTerrain
--
_map:Map
--
+ checkIfBlocked(:Terrain, :Entity) :bool
--
*Rationale:*
* Contains function prototypes
than an Avatar can use to 
manipulate the map
--
Implementation: 
Testing: </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>180</x>
      <y>702</y>
      <w>126</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>
Avatar
--

--
inspect(:2DVector) :String
--
*Rationale*
* The avatar reference
* Allows things to interact with
the player
--
Implemention:
Testing:</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>672</x>
      <y>762</y>
      <w>126</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>
MapTile
--
final int xPosition
final int yPosition
--
getTerrain() :Terrain
getEntity() :Entity 
getTopmostItem() :Item  
--
*Rationale*
* Represents one tile on the 
map.
--
Implemention:
Testing:</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>738</x>
      <y>936</y>
      <w>126</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>
Item
--
isOneShot_:Boolean
isTakeable_:Boolean
--

--
*Rationale*
* Non living thing that can't 
move

--
Implemention:
Testing:</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>540</x>
      <y>942</y>
      <w>126</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>
Entity
--

--

--
*Rationale*
* Represents a living, moving
thing
--
Implemention:
Testing:</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>942</x>
      <y>918</y>
      <w>126</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>
Terrain
--

--

--
*Rationale*
 * Represents terrain
--
Implemention:
Testing:</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>528</x>
      <y>252</y>
      <w>114</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>170.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>678</x>
      <y>252</y>
      <w>36</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>738</x>
      <y>252</y>
      <w>132</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;200.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>666</x>
      <y>648</y>
      <w>60</w>
      <h>138</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1..n
Aggregation
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>936</x>
      <y>414</y>
      <w>132</w>
      <h>516</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

m1=1..n
m2=1

</panel_attributes>
    <additional_attributes>180.0;840.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>636</x>
      <y>444</y>
      <w>66</w>
      <h>510</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

m1=1..n
m2=1
Composition
</panel_attributes>
    <additional_attributes>20.0;830.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>780</x>
      <y>480</y>
      <w>66</w>
      <h>468</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

m1=1..n

m2=1
</panel_attributes>
    <additional_attributes>70.0;760.0;10.0;410.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>300</x>
      <y>630</y>
      <w>306</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1..n
Aggregation (lists one or more)
</panel_attributes>
    <additional_attributes>490.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>180</x>
      <y>528</y>
      <w>126</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>
AvatarController
--
- avatar_ :Avatar
- display_ :Display
--
+ handleAttack(:2DVector)
+ handleInteract(:2DVector)
+ handleMove(:2DVector)
+ handleUse(:2DVector)
--
*Rationale*
* Handles keyboard input
--
Implemention:
Testing:</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>240</x>
      <y>654</y>
      <w>60</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
lt=-&gt;&gt;&gt;&gt;
m1=1
m2=1
controls one
</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>342</x>
      <y>270</y>
      <w>126</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
MapAvatarInterface
--

--
+ inspect(: 2D vector) :String
--
*Rationale*
* Contains function prototypes
than an Avatar can use to 
call the map
--
Implemntation:
Testing:</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>462</x>
      <y>360</y>
      <w>60</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>336</x>
      <y>78</y>
      <w>702</w>
      <h>816</h>
    </coordinates>
    <panel_attributes>Model
--
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>420</x>
      <y>378</y>
      <w>90</w>
      <h>186</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1
Association (has a)</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;290.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>462</x>
      <y>378</y>
      <w>108</w>
      <h>138</h>
    </coordinates>
    <panel_attributes>lt=-()
m2=provide
</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>522</x>
      <y>504</y>
      <w>84</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=)-
m1=require
</panel_attributes>
    <additional_attributes>20.0;20.0;120.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>348</x>
      <y>552</y>
      <w>150</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Map_MapView_Interface
--
--
+ getCharacter(:2DVector) :Char
--
Rationale:
* Contains function prototypes
than a MapView can use to 
access the map
--
Implementation: 
Testing: </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>486</x>
      <y>600</y>
      <w>54</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-()
m2=provide
</panel_attributes>
    <additional_attributes>20.0;20.0;70.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>528</x>
      <y>600</y>
      <w>78</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=)-
m1=require
</panel_attributes>
    <additional_attributes>20.0;20.0;110.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>678</x>
      <y>414</y>
      <w>246</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>

</panel_attributes>
    <additional_attributes>10.0;190.0;390.0;150.0;370.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>612</x>
      <y>444</y>
      <w>60</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>

</panel_attributes>
    <additional_attributes>80.0;140.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>678</x>
      <y>480</y>
      <w>60</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>

</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;80.0</additional_attributes>
  </element>
</diagram>
